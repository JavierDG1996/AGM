spacePattern=3
lineThickness=2
fontName=Arial
name=table
vertexDiameter=40
shortPattern=1
nodeThickness=2
fontSize=11
longPattern=3
===
findObjectVisually : active(1)
{
	{
		r:robot(-300,-140)
	}
	=>
	{
		cl:noClass(265,-110)
		o:object(-130,-75)
		re:noReach(265,-30)
		r:robot(-135,-200)
		po:pose(265,45)
		se:see(265,-190)
		o->po(prop)
		o->re(prop)
		o->se(prop)
		o->cl(prop)
		r->o(know)
	}
}

findObjectTold : active(4)
{
	{
		r:robot(-300,-140)
	}
	=>
	{
		cl:noClass(265,-110)
		o:object(-130,-75)
		re:noReach(265,-30)
		r:robot(-135,-200)
		po:noPose(265,45)
		se:noSee(265,-190)
		o->po(prop)
		o->re(prop)
		o->se(prop)
		o->cl(prop)
		r->o(know)
	}
}

recognizeObjMug : active(1)
{
	{
		c:noClass(265,10)
		o:object(-130,-75)
		other:object(-25,10)
		r:robot(-130,-210)
		po:pose(265,-75)
		se:see(265,-160)
		r->o(know)
		o->po(prop)
		o->se(prop)
		o->c(prop)
	}
	=>
	{
		c:class(275,-15)
		m:mug(275,65)
		o:object(-130,-75)
		other:object(-30,25)
		r:robot(-130,-200)
		po:pose(275,-100)
		se:see(275,-180)
		r->o(know)
		o->m(prop)
		o->c(prop)
		o->po(prop)
		o->se(prop)
		o->other(in)
	}
}

recognizeObjBox : active(1)
{
	{
		c:noClass(265,10)
		o:object(-130,-75)
		other:object(-25,10)
		r:robot(-130,-210)
		po:pose(265,-75)
		se:see(265,-160)
		r->o(know)
		o->po(prop)
		o->se(prop)
		o->c(prop)
	}
	=>
	{
		c:class(275,-15)
		m:box(275,65)
		o:object(-130,-75)
		other:object(-30,25)
		r:robot(-130,-200)
		po:pose(275,-100)
		se:see(275,-180)
		r->o(know)
		o->m(prop)
		o->c(prop)
		o->po(prop)
		o->se(prop)
		o->other(in)
	}
}

recognizeObjTable : active(1)
{
	{
		c:noClass(265,10)
		o:object(-130,-75)
		r:robot(-130,-210)
		po:pose(265,-75)
		se:see(265,-160)
		r->o(know)
		o->po(prop)
		o->se(prop)
		o->c(prop)
	}
	=>
	{
		c:class(275,-15)
		m:table(275,65)
		o:object(-130,-75)
		r:robot(-130,-200)
		po:pose(275,-100)
		se:see(275,-180)
		r->o(know)
		o->m(prop)
		o->c(prop)
		o->po(prop)
		o->se(prop)
	}
}

recognizeObjFails : active(1)
{
	{
		c:noClass(265,10)
		o:object(-130,-75)
		r:robot(-130,-210)
		po:pose(265,-75)
		se:see(265,-160)
		r->o(know)
		o->po(prop)
		o->se(prop)
		o->c(prop)
	}
	=>
	{
		c:classFail(265,10)
		o:object(-130,-75)
		r:robot(-130,-210)
		po:pose(265,-75)
		se:see(265,-160)
		r->o(know)
		o->po(prop)
		o->se(prop)
		o->c(prop)
	}
}

setObjectReach : active(1)
{
	{
		r:noReach(400,-80)
		o:object(80,-40)
		o->r(prop)
	}
	=>
	{
		r:reach(405,-80)
		o:object(80,-40)
		o->r(prop)
	}
}

setObjectNotReach : passive(1)
{
	{
		r:reach(410,-40)
		o:object(80,-40)
		o->r(prop)
	}
	=>
	{
		r:noReach(410,-40)
		o:object(80,-40)
		o->r(prop)
	}
}


setObjectSee : active(1)
{
	{
		r:noSee(410,-40)
		o:object(80,-40)
		o->r(prop)
	}
	=>
	{
		r:see(410,-40)
		o:object(80,-40)
		o->r(prop)
	}
}

setObjectNotSee : passive(1)
{
	{
		r:see(410,-40)
		o:object(80,-40)
		o->r(prop)
	}
	=>
	{
		r:noSee(410,-40)
		o:object(80,-40)
		o->r(prop)
	}
}

setObjectPosition : active(1)
{
	{
		r:noPose(410,-40)
		o:object(80,-40)
		o->r(prop)
	}
	=>
	{
		r:pose(410,-40)
		o:object(80,-40)
		o->r(prop)
	}
}

setObjectNotPosition : passive(1)
{
	{
		r:pose(410,-40)
		o:object(80,-40)
		o->r(prop)
	}
	=>
	{
		r:noPose(410,-40)
		o:object(80,-40)
		o->r(prop)
	}
}

tellHumanAboutMug : active(1)
{
	{
		c:class(-305,195)
		m:mug(-200,190)
		o:object(-295,-25)
		p:pose(-405,190)
		r:robot(-295,-135)
		cont1:object(-180,125)
		cont2:object(-75,20)
		h:human(45,-135)
		r->o(know)
		r->h(interacting)
		o->p(prop)
		o->c(prop)
		o->m(prop)
		o->cont1(in)
		cont1->cont2(eq)
	}
	=>
	{
		c:class(-305,195)
		ch:class(40,195)
		oh:object(45,-25)
		hr:reach(190,50)
		h:human(45,-135)
		cont2:object(-75,20)
		m:mug(-200,190)
		mh:mug(-65,190)
		o:object(-295,-25)
		p:pose(-405,190)
		cont1:object(-180,125)
		ph:pose(145,190)
		r:robot(-295,-135)
		hs:see(190,120)
		r->o(know)
		r->h(interacting)
		o->p(prop)
		o->c(prop)
		h->oh(know)
		oh->ch(prop)
		oh->ph(prop)
		o->m(prop)
		oh->mh(prop)
		o->oh(eq)
		o->cont1(in)
		oh->cont2(in)
		cont1->cont2(eq)
		oh->hr(prop)
		oh->hs(prop)
	}
}

tellHumanAboutBox : active(1)
{
	{
		c:class(-305,195)
		m:box(-200,190)
		o:object(-295,-25)
		p:pose(-405,190)
		r:robot(-295,-135)
		cont1:object(-180,125)
		cont2:object(-75,20)
		h:human(45,-135)
		r->o(know)
		r->h(interacting)
		o->p(prop)
		o->c(prop)
		o->m(prop)
		o->cont1(in)
		cont1->cont2(eq)
	}
	=>
	{
		c:class(-305,195)
		ch:class(40,195)
		oh:object(45,-25)
		hr:reach(190,50)
		h:human(45,-135)
		cont2:object(-75,20)
		m:box(-200,190)
		mh:box(-65,190)
		o:object(-295,-25)
		p:pose(-405,190)
		cont1:object(-180,125)
		ph:pose(145,190)
		r:robot(-295,-135)
		hs:see(190,120)
		r->o(know)
		r->h(interacting)
		o->p(prop)
		o->c(prop)
		h->oh(know)
		oh->ch(prop)
		oh->ph(prop)
		o->m(prop)
		oh->mh(prop)
		o->oh(eq)
		o->cont1(in)
		oh->cont2(in)
		cont1->cont2(eq)
		oh->hr(prop)
		oh->hs(prop)
	}
}

tellHumanAboutTable : active(1)
{
	{
		c:class(-305,195)
		h:human(45,-135)
		m:table(-200,190)
		o:object(-295,-25)
		p:pose(-405,190)
		r:robot(-295,-135)
		r->o(know)
		r->h(interacting)
		o->p(prop)
		o->c(prop)
		o->m(prop)
	}
	=>
	{
		c:class(-305,195)
		ch:class(40,195)
		oh:object(45,-25)
		hr:reach(190,50)
		h:human(45,-135)
		m:table(-200,190)
		mh:table(-65,190)
		o:object(-295,-25)
		p:pose(-405,190)
		hs:see(190,120)
		ph:pose(145,190)
		r:robot(-295,-135)
		r->o(know)
		r->h(interacting)
		o->p(prop)
		o->c(prop)
		h->oh(know)
		oh->ch(prop)
		oh->ph(prop)
		o->m(prop)
		oh->mh(prop)
		o->oh(eq)
		oh->hr(prop)
		oh->hs(prop)
	}
}

tellHumanAboutUnknownObject : active(3)
{
	{
		c:classFail(-305,195)
		o:object(-295,-25)
		p:pose(-405,190)
		r:robot(-295,-135)
		h:human(45,-135)
		r->o(know)
		r->h(interacting)
		o->p(prop)
		o->c(prop)
	}
	=>
	{
		c:classFail(-305,195)
		ch:noClass(40,195)
		oh:object(45,-25)
		hr:reach(190,50)
		h:human(45,-135)
		o:object(-295,-25)
		p:pose(-405,190)
		ph:pose(145,190)
		r:robot(-295,-135)
		hs:see(190,120)
		r->o(know)
		r->h(interacting)
		o->p(prop)
		o->c(prop)
		h->oh(know)
		oh->ch(prop)
		oh->ph(prop)
		o->oh(eq)
		oh->hr(prop)
		oh->hs(prop)
	}
}

makeHumanLook : active(2)
{
	{
		h:human(155,-75)
		o:object(-285,40)
		p:pose(220,255)
		r:robot(-285,-75)
		nS:noSee(60,255)
		o_h:object(150,40)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o_h->p(prop)
		o_h->nS(prop)
	}
	=>
	{
		h:human(155,-75)
		o:object(-260,50)
		p:pose(230,265)
		r:robot(-260,-75)
		nS:see(70,265)
		o_h:object(155,50)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o_h->nS(prop)
		o_h->p(prop)
	}
}

humanClassifiesMug : active(2)
{
	{
		cl:noClass(45,245)
		h:human(155,-75)
		o:object(-285,35)
		p:pose(255,250)
		see:see(150,255)
		r:robot(-285,-75)
		cont2:object(15,110)
		o_h:object(155,35)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o_h->cl(prop)
		o_h->see(prop)
		o_h->p(prop)
	}
	=>
	{
		cl:class(45,245)
		h:human(155,-75)
		o:object(-285,35)
		p:pose(255,250)
		see:see(150,255)
		r:robot(-285,-75)
		cont2:object(15,110)
		o_h:object(155,35)
		newobj:mug(-45,245)
		o->newobj(prop)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o_h->cl(prop)
		o_h->see(prop)
		o_h->p(prop)
		o_h->cont2(in)
	}
}


humanClassifiesMilk : active(2)
{
	{
		cl:noClass(45,245)
		h:human(155,-75)
		o:object(-285,35)
		p:pose(255,250)
		see:see(150,255)
		r:robot(-285,-75)
		cont2:object(15,110)
		o_h:object(155,35)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o_h->cl(prop)
		o_h->see(prop)
		o_h->p(prop)
	}
	=>
	{
		cl:class(45,245)
		h:human(155,-75)
		o:object(-285,35)
		p:pose(255,250)
		see:see(150,255)
		r:robot(-285,-75)
		cont2:object(15,110)
		o_h:object(155,35)
		newobj:milkPot(-45,245)
		o_h->newobj(prop)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o_h->cl(prop)
		o_h->see(prop)
		o_h->p(prop)
		o_h->cont2(in)
	}
}

humanClassifiesBox : active(2)
{
	{
		cl:noClass(45,245)
		h:human(155,-75)
		o:object(-285,35)
		p:pose(255,250)
		see:see(150,255)
		r:robot(-285,-75)
		cont2:object(15,110)
		o_h:object(155,35)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o_h->cl(prop)
		o_h->see(prop)
		o_h->p(prop)
	}
	=>
	{
		cl:class(45,245)
		h:human(155,-75)
		o:object(-285,35)
		p:pose(255,250)
		see:see(150,255)
		r:robot(-285,-75)
		cont2:object(15,110)
		o_h:object(155,35)
		newobj:box(-45,245)
		o_h->newobj(prop)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o_h->cl(prop)
		o_h->see(prop)
		o_h->p(prop)
		o_h->cont2(in)
	}
}

humanClassifiesTable : active(2)
{
	{
		cl:noClass(45,245)
		h:human(155,-75)
		o:object(-285,35)
		p:pose(255,250)
		see:see(150,255)
		r:robot(-285,-75)
		o_h:object(155,35)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o_h->cl(prop)
		o_h->see(prop)
		o_h->p(prop)
	}
	=>
	{
		cl:class(45,245)
		h:human(155,-75)
		o:object(-285,35)
		p:pose(255,250)
		see:see(150,255)
		r:robot(-285,-75)
		o_h:object(155,35)
		newobj:table(-45,245)
		o_h->newobj(prop)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o_h->cl(prop)
		o_h->see(prop)
		o_h->p(prop)
	}
}

humanTellsUsAboutMug : active(3)
{
	{
		ch:class(80,255)
		f:classFail(-290,255)
		h:human(155,-75)
		cont2:object(30,80)
		mh:mug(210,255)
		o:object(-285,35)
		r:robot(-285,-75)
		cont1:object(-175,190)
		o_h:object(155,35)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o->f(prop)
		o_h->mh(prop)
		o_h->ch(prop)
		o_h->cont2(in)
		cont1->cont2(eq)
	}
	=>
	{
		ch:class(90,250)
		f:class(-340,250)
		h:human(155,-75)
		cont2:object(10,85)
		mh:mug(220,250)
		o:object(-285,35)
		r:robot(-285,-75)
		cont1:object(-125,170)
		mr:mug(-215,250)
		o_h:object(155,35)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o->f(prop)
		o->mr(prop)
		o_h->mh(prop)
		o_h->ch(prop)
		o->cont1(in)
		o_h->cont2(in)
		cont1->cont2(eq)
	}
}

humanTellsUsAboutMilk : active(3)
{
	{
		ch:class(80,255)
		f:classFail(-290,255)
		h:human(155,-75)
		cont2:object(30,80)
		mh:milkPot(210,255)
		o:object(-285,35)
		r:robot(-285,-75)
		cont1:object(-175,190)
		o_h:object(155,35)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o->f(prop)
		o_h->mh(prop)
		o_h->ch(prop)
		o_h->cont2(in)
		cont1->cont2(eq)
	}
	=>
	{
		ch:class(90,250)
		f:class(-340,250)
		h:human(155,-75)
		cont2:object(10,85)
		mh:milkPot(220,250)
		o:object(-285,35)
		r:robot(-285,-75)
		cont1:object(-125,170)
		mr:milkPot(-215,250)
		o_h:object(155,35)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o->f(prop)
		o->mr(prop)
		o_h->mh(prop)
		o_h->ch(prop)
		o->cont1(in)
		o_h->cont2(in)
		cont1->cont2(eq)
	}
}

humanTellsUsAboutBox : active(3)
{
	{
		ch:class(80,255)
		f:classFail(-290,255)
		h:human(155,-75)
		mh:box(210,255)
		o:object(-285,35)
		r:robot(-285,-75)
		cont1:object(-175,190)
		cont2:object(30,80)
		o_h:object(155,35)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o->f(prop)
		o_h->mh(prop)
		o_h->ch(prop)
		o_h->cont2(in)
		cont1->cont2(eq)
	}
	=>
	{
		ch:class(90,250)
		f:class(-340,250)
		h:human(155,-75)
		cont2:object(10,85)
		mh:box(220,250)
		o:object(-285,35)
		r:robot(-285,-75)
		cont1:object(-125,170)
		mr:box(-215,250)
		o_h:object(155,35)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o->f(prop)
		o->mr(prop)
		o_h->mh(prop)
		o_h->ch(prop)
		o->cont1(in)
		o_h->cont2(in)
		cont1->cont2(eq)
	}
}

humanTellsUsAboutTable : active(3)
{
	{
		ch:class(80,255)
		f:classFail(-290,255)
		h:human(155,-75)
		mh:table(210,255)
		o:object(-285,35)
		r:robot(-285,-75)
		o_h:object(155,35)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o->f(prop)
		o_h->mh(prop)
		o_h->ch(prop)
	}
	=>
	{
		ch:class(90,250)
		f:class(-340,250)
		h:human(155,-75)
		mr:table(-215,250)
		mh:table(220,250)
		o:object(-285,35)
		r:robot(-285,-75)
		o_h:object(155,35)
		o->o_h(eq)
		r->h(interacting)
		r->o(know)
		h->o_h(know)
		o->f(prop)
		o->mr(prop)
		o_h->mh(prop)
		o_h->ch(prop)
	}
}

robotMovesMugFromTableToBox : active(1)
{
	{
		b:box(-80,-5)
		r1:reach(-80,-200)
		m:mug(-80,-140)
		rc1:reach(-80,-335)
		rc2:reach(-80,-65)
		r:robot(-625,-175)
		o:object(-425,-175)
		c2:object(-385,-45)
		c1:object(-390,-305)
		t:table(-80,-275)
		r->o(know)
		r->c2(know)
		o->r1(prop)
		o->m(prop)
		c2->rc2(prop)
		c2->b(prop)
		r->c1(know)
		c1->rc1(prop)
		c1->t(prop)
		o->c1(in)
	}
	=>
	{
		b:box(-80,-5)
		r1:reach(-80,-200)
		m:mug(-80,-140)
		rc1:reach(-80,-335)
		rc2:reach(-80,-65)
		r:robot(-625,-175)
		o:object(-425,-175)
		c2:object(-385,-45)
		c1:object(-390,-305)
		t:table(-80,-275)
		r->o(know)
		r->c2(know)
		o->r1(prop)
		o->m(prop)
		c2->rc2(prop)
		c2->b(prop)
		r->c1(know)
		c1->rc1(prop)
		c1->t(prop)
		o->c2(in)
	}
}

humanMovesMugFromTableToBox : active(1)
{
	{
		b:box(-80,-5)
		r1:reach(-80,-200)
		m:mug(-80,-140)
		rc1:reach(-80,-335)
		rc2:reach(-80,-65)
		r:human(-625,-175)
		o:object(-425,-175)
		c2:object(-385,-45)
		c1:object(-390,-305)
		t:table(-80,-275)
		r->o(know)
		r->c2(know)
		o->r1(prop)
		o->m(prop)
		c2->rc2(prop)
		c2->b(prop)
		r->c1(know)
		c1->rc1(prop)
		c1->t(prop)
		o->c1(in)
	}
	=>
	{
		b:box(-80,-5)
		r1:reach(-80,-200)
		m:mug(-80,-140)
		rc1:reach(-80,-335)
		rc2:reach(-80,-65)
		r:human(-625,-175)
		o:object(-425,-175)
		c2:object(-385,-45)
		c1:object(-390,-305)
		t:table(-80,-275)
		r->o(know)
		r->c2(know)
		o->r1(prop)
		o->m(prop)
		c2->rc2(prop)
		c2->b(prop)
		r->c1(know)
		c1->rc1(prop)
		c1->t(prop)
		o->c2(in)
	}
	effect
	{
		(forall
			other:object
			(when
				(eq o other)
				(and
					(forall
						backcont:object
						(not (in other backcont))
					)
					(in other c2)
				)
			)
		)
	}
}

setTableClean : active(1)
{
	{
		r:robot(-130,-200)
		m:table(275,65)
		o:object(-130,-75)
		r->o(know)
		o->m(prop)
		o->m(clean)*
	}
	=>
	{
		r:robot(-130,-200)
		m:table(275,65)
		o:object(-130,-75)
		r->o(know)
		o->m(prop)
		o->m(clean)
	}
	precondition
	{
		(forall
			other:status
			t:mug
			(when
				(prop other t)
				(not (in other o))
			)
		)
	}
}



MOVEtoCLEAN : active(1)
{
	setObjectReach as reachMug
	setObjectReach as reachBox
	setObjectReach as reachTable
	robotMovesMugFromTableToBox as move
	setTableClean as set
	where:
	reachMug.s = move.s
	reachBox.s = move.cs2
	reachMug.o = move.o
	reachTable.o = move.c2
	move.cs1 = set.s = reachTable.s
	move.r = set.r
	move.t = set.m
	move.c1 = set.o = reachBox.o
}

MOVIDA: active(1)
{
	findObjectVisually as findBox
	recognizeObjBox as realizeTheBoxIsABox
	setObjectReach as reachMug
	setObjectReach as reachTable
	setObjectReach as reachBox
	robotMovesMugFromTableToBox as move
	setTableClean as setClean
	where:
	realizeTheBoxIsABox.o = reachBox.o = move.c2
}


TELLhumanInorderTOmove : active(1)
{
	tellHumanAboutMug as tell
	humanMovesMugFromTableToBox as humanmoves
	where:
	tell.cont2 = humanmoves.c1
	tell.h = humanmoves.r
}


FINDMILK: active(2)
{
	recognizeObjFails as wtf
	tellHumanAboutUnknownObject as waaat
	humanClassifiesMilk as itsjustmilk
	humanTellsUsAboutMilk as tellme
	where:
	wtf.r = waaat.r = itsjustmilk.r
	wtf.o = waaat.o = itsjustmilk.o
	wtf.s = waaat.sr = tellme.s
	waaat.h = itsjustmilk.h = tellme.h
}










