name=grammarGualzruVisual;

spacePattern=3;
lineThickness=2;
vertexDiameter=40;
shortPattern=1;
nodeThickness=2;
longPattern=3;

modelGravity
{
	{
		s:start(193,116);
	}
	=>
	{
		g:gravity(337,116);
		gualzru:robot(135,129);
		gualzru->g(link);
	}
};

lookFloor
{
	{
		g:gravity(317,118);
		gualzru:robot(132,119);
		gualzru->g(link);
	}
	=>
	{
		g:gravity(394,133);
		gualzru:robot(129,132);
		gualzru->g(lookTowards);
	}
};

modelHeight
{
	{
		g:gravity(379,119);
		gualzru:robot(127,118);
		gualzru->g(lookTowards);
	}
	=>
	{
		g:floor(413,145);
		gualzru:robot(136,142);
		gualzru->g(lookTowards);
		gualzru->g(in);
	}
};

lookPerpendicularFloor
{
	{
		gualzru:robot(104,144);
		floor:floor(327,147);
		gualzru->floor(lookTowards);
	}
	=>
	{
		gualzru:robot(110,149);
		floor:floor(404,151);
		gualzru->floor(lookPerpendicular);
	}
};

modelYaw
{
	{
		gualzru:robot(101,151);
		floor:floor(386,153);
		gualzru->floor(lookPerpendicular);
	}
	=>
	{
		gualzru:robot(108,138);
		floor:orientedFloor(392,137);
		gualzru->floor(lookPerpendicular);
	}
};

lookFirstWall
{
	{
		gualzru:robot(121,136);
		floor:orientedFloor(389,140);
		gualzru->floor(lookPerpendicular);
	}
	=>
	{
		floor:orientedFloor(94,223);
		w4:notModeledWall(448,82);
		w3:notModeledWall(333,151);
		w2:notModeledWall(266,82);
		w1:notModeledWall(149,132);
		gualzru:robot(89,35);
		gualzru->w1(looks);
		floor->w1(linked);
		w1->w2(linked);
		w2->w3(linked);
		w3->w4(linked);
	}
};

lookNextWall
{
	{
		w2:notModeledWall(437,67);
		w1:wall(209,107);
		gualzru:robot(56,159);
		gualzru->w1(looks);
		w1->w2(linked);
	}
	=>
	{
		w2:notModeledWall(419,68);
		w1:wall(197,145);
		gualzru:robot(120,61);
		gualzru->w2(looks);
		w1->w2(linked);
	}
};

modelWall
{
	{
		w1:notModeledWall(391,169);
		gualzru:robot(102,114);
		gualzru->w1(looks);
	}
	=>
	{
		w1:wall(347,134);
		gualzru:robot(92,102);
		gualzru->w1(looks);
	}
};

modelLastWall
{
	{
		floor:orientedFloor(54,216);
		robot:robot(372,62);
		w4:notModeledWall(369,237);
		w3:wall(150,159);
		w2:wall(258,78);
		w1:wall(75,56);
		robot->w4(looks);
		floor->w1(linked);
		w1->w2(linked);
		w2->w3(linked);
		w3->w4(linked);
	}
	=>
	{
		floor:room(455,203);
		robot:robot(287,223);
		w4:wall(88,216);
		w3:wall(72,133);
		w2:wall(97,38);
		w1:wall(394,51);
		robot->w4(looks);
		floor->w1(linked);
		w1->w2(linked);
		w2->w3(linked);
		w3->w4(linked);
	}
};

detectObstacle
{
	{
		room:room(370,151);
		gualzru:robot(130,132);
		gualzru->room(in);
	}
	=>
	{
		obstacle:obstacle(408,139);
		room:room(168,209);
		gualzru:robot(114,83);
		gualzru->room(in);
		obstacle->room(in);
	}
};

modelTable
{
	{
		obstacle:obstacle(426,161);
		room:room(145,185);
		gualzru:robot(203,76);
		gualzru->room(in);
		obstacle->room(in);
	}
	=>
	{
		obstacle:table(363,204);
		room:room(138,239);
		gualzru:robot(240,65);
		gualzru->room(in);
		obstacle->room(in);
	}
};

detectObjectInTable
{
	{
		table:table(378,217);
		room:room(128,197);
		gualzru:robot(221,91);
		gualzru->room(in);
		table->room(in);
	}
	=>
	{
		table:table(424,237);
		object:object(355,92);
		room:room(96,216);
		gualzru:robot(130,73);
		gualzru->room(in);
		table->room(in);
		object->table(in);
	}
};

modelMugInTable
{
	{
		table:table(392,182);
		object:object(190,199);
		room:room(365,86);
		gualzru:robot(106,71);
		gualzru->room(in);
		table->room(in);
		object->table(in);
	}
	=>
	{
		table:table(401,209);
		object:mug(72,249);
		room:room(436,82);
		gualzru:robot(68,44);
		gualzru->room(in);
		table->room(in);
		object->table(in);
	}
};

