spacePattern=3
lineThickness=2
name=grammarGualzru
vertexDiameter=68
shortPattern=1
nodeThickness=2
longPattern=3
==============================================
agents
{
	pitchNRoll ( off enabled )
	yaw ( off enabled )
	saccade ( off downwards frontal firstWall nextWall specific)
	distance ( off floor wall maintenance )
	wander ( off enabled)
	unknownFinder (off floor table)
	obstacleModeler ( off enabled )
	objectModeler ( off enabled )
}
configurations
{
	pitchAndRoll
	lookUnknownFloor
	heightBehavior
	lookPerpendicularFloor
	yaw
	lookFirstWall
	modelWall
	lookNextWall
	maintainWallDistances
	insertUnknownStuff
	obstaclesSaccade
}
table
{
	enabled off      off       off         off     off   off off
	off     off      downwards off         off     off   off off
	off     off      off       floor       off     off   off off
	off     off      frontal   off         off     off   off off
	off     enabled  off       off         off     off   off off
	off     enabled  firstWall maintenance off     off   off off
	off     off      off       wall        off     off   off off
	off     enabled  nextWall  maintenance off     off   off off
	off     enabled  off       maintenance enabled off   off off
	off     enabled  off       maintenance enabled floor off off
	off     enabled  specific  maintenance off     off   off off
}
==============================================
modelGravity
{
	{
		s:start(40,40)
	}
	=>
	{
		g:gravity(180,40)
		gualzru:robot(40,40)
		gualzru->g(link)
	}
}

lookFloor
{
	{
		g:gravity(170,40)
		gualzru:robot(40,40)
		gualzru->g(link)
	}
	=>
	{
		g:gravity(230,40)
		gualzru:robot(40,40)
		gualzru->g(lookTowards)
	}
}

modelHeight
{
	{
		g:gravity(270,40)
		gualzru:robot(40,40)
		gualzru->g(lookTowards)
	}
	=>
	{
		g:plane(290,40)
		gualzru:robot(40,40)
		gualzru->g(lookTowards)
		gualzru->g(in)
	}
}

lookPerpendicularFloor
{
	{
		gualzru:robot(40,40)
		floor:plane(220,40)
		gualzru->floor(lookTowards)
	}
	=>
	{
		gualzru:robot(40,40)
		floor:plane(260,40)
		gualzru->floor(lookPerpendicular)
	}
}

modelYaw
{
	{
		gualzru:robot(40,40)
		floor:plane(260,40)
		gualzru->floor(lookPerpendicular)
	}
	=>
	{
		gualzru:robot(40,40)
		floor:floor(260,40)
		gualzru->floor(lookPerpendicular)
	}
}

lookFirstWall
{
	{
		gualzru:robot(40,40)
		floor:floor(160,160)
		gualzru->floor(lookPerpendicular)
	}
	=>
	{
		floor:floor(180,160)
		w4:notWall(370,60)
		w3:notWall(270,160)
		w2:notWall(170,60)
		w1:notWall(50,160)
		gualzru:robot(50,40)
		gualzru->w1(looks)
		floor->w1(link)
		w1->w2(link)
		w2->w3(link)
		w3->w4(link)
	}
}

lookNextWall
{
	{
		w2:notWall(270,40)
		w1:wall(160,120)
		gualzru:robot(40,40)
		gualzru->w1(looks)
		w1->w2(link)
	}
	=>
	{
		w2:notWall(230,40)
		w1:wall(120,120)
		gualzru:robot(40,40)
		gualzru->w2(looks)
		w1->w2(link)
	}
}

modelWall
{
	{
		w2:notWall(310,40)
		w1:notWall(170,140)
		gualzru:robot(40,40)
		gualzru->w1(looks)
		w1->w2(link)
	}
	=>
	{
		w2:notWall(330,40)
		w1:wall(190,140)
		gualzru:robot(40,40)
		gualzru->w1(looks)
		w1->w2(link)
	}
}

modelLastWall
{
	{
		floor:floor(40,160)
		robot:robot(180,40)
		w4:notWall(370,40)
		w3:wall(270,150)
		w2:wall(130,150)
		w1:wall(40,40)
		robot->w4(looks)
		floor->w1(link)
		w1->w2(link)
		w2->w3(link)
		w3->w4(link)
	}
	=>
	{
		floor:room(40,160)
		robot:robot(160,40)
		w4:wall(360,40)
		w3:wall(270,150)
		w2:wall(130,150)
		w1:wall(40,40)
		floor->w1(link)
		w1->w2(link)
		w2->w3(link)
		w3->w4(link)
	}
}

detectObstacle
{
	{
		room:room(170,110)
		gualzru:robot(40,40)
		gualzru->room(in)
	}
	=>
	{
		obstacle:obstacle(300,40)
		room:room(170,110)
		gualzru:robot(40,40)
		gualzru->room(in)
		obstacle->room(in)
	}
}

approachObstacle
{
	{
		obstacle:obstacle(300,40)
		room:room(170,110)
		gualzru:robot(40,40)
		gualzru->room(in)
		obstacle->room(in)
	}
	=>
	{
		obstacle:obstacle(300,40)
		room:room(170,110)
		gualzru:robot(40,40)
		gualzru->room(in)
		obstacle->room(in)
		gualzru->obstacle(closeLook)
	}
}

modelTable
{
	{
		obstacle:obstacle(300,40)
		room:room(170,110)
		gualzru:robot(40,40)
		gualzru->room(in)
		obstacle->room(in)
		gualzru->obstacle(closeLook)
	}
	=>
	{
		obstacle:table(300,40)
		room:room(170,110)
		gualzru:robot(40,40)
		gualzru->room(in)
		obstacle->room(in)
		gualzru->obstacle(closeLook)
	}
}

detectObjectInTable
{
	{
		table:table(300,40)
		room:room(170,110)
		gualzru:robot(40,40)
		gualzru->room(in)
		table->room(in)
		gualzru->table(closeLook)
	}
	=>
	{
		table:table(300,40)
		object:object(420,40)
		room:room(170,110)
		gualzru:robot(40,40)
		gualzru->room(in)
		table->room(in)
		gualzru->table(closeLook)
		object->table(in)
	}
}

modelMugInTable
{
	{
		table:table(300,40)
		object:object(420,40)
		room:room(170,110)
		gualzru:robot(40,40)
		gualzru->room(in)
		table->room(in)
		object->table(in)
		gualzru->table(closeLook)
	}
	=>
	{
		table:table(300,40)
		object:mug(420,40)
		room:room(170,110)
		gualzru:robot(40,40)
		gualzru->room(in)
		table->room(in)
		object->table(in)
		gualzru->table(closeLook)
	}
}

